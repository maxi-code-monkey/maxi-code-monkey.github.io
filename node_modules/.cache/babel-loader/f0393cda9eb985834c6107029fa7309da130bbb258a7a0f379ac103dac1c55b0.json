{"ast":null,"code":"var _jsxFileName = \"/Users/maxgomez/GH/maxi-code-monkey.github.io/src/components/ExperienceCard/index.tsx\";\nimport React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport Pill from \"../Pill\";\nimport { styles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExperienceCard = ({\n  description,\n  employer,\n  fromYear,\n  position,\n  stack,\n  toYear\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"experience-card\",\n    sx: styles.cardContainer,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"left-column\",\n      sx: styles.leftColumn,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [fromYear, \" - \", toYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"right-column\",\n      sx: styles.rightColumn,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [position, \" @ \", employer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), description.map((paragraph, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: paragraph\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"pills-container\",\n        children: stack.map((tech, index) => /*#__PURE__*/_jsxDEV(Pill, {\n          label: tech\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ExperienceCard;\nexport default ExperienceCard;\nvar _c;\n$RefreshReg$(_c, \"ExperienceCard\");","map":{"version":3,"names":["React","Box","Typography","Pill","styles","jsxDEV","_jsxDEV","ExperienceCard","description","employer","fromYear","position","stack","toYear","className","sx","cardContainer","children","leftColumn","variant","fileName","_jsxFileName","lineNumber","columnNumber","rightColumn","map","paragraph","index","tech","label","_c","$RefreshReg$"],"sources":["/Users/maxgomez/GH/maxi-code-monkey.github.io/src/components/ExperienceCard/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\n\nimport { ExperienceCardProps } from \"./types\";\nimport Pill from \"../Pill\";\n\nimport { styles } from './styles';\n\nconst ExperienceCard = ({\n  description,\n  employer,\n  fromYear,\n  position,\n  stack,\n  toYear\n}: ExperienceCardProps) => {\n  return (\n    <Box className='experience-card' sx={styles.cardContainer}>\n      <Box className='left-column' sx={styles.leftColumn}>\n        <Typography variant=\"body1\">\n          {fromYear} - {toYear}\n        </Typography>\n      </Box>\n      <Box className='right-column' sx={styles.rightColumn}>\n        <Typography variant=\"body1\">\n          {position} @ {employer}\n        </Typography>\n        {description.map((paragraph, index) => (\n          <Typography key={index} variant=\"body1\">\n            {paragraph}\n          </Typography>\n        ))}\n        <Box className='pills-container'>\n          {stack.map((tech, index) => (\n            <Pill label={tech} key={index} />\n          ))}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default ExperienceCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAG/C,OAAOC,IAAI,MAAM,SAAS;AAE1B,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EACtBC,WAAW;EACXC,QAAQ;EACRC,QAAQ;EACRC,QAAQ;EACRC,KAAK;EACLC;AACmB,CAAC,KAAK;EACzB,oBACEP,OAAA,CAACL,GAAG;IAACa,SAAS,EAAC,iBAAiB;IAACC,EAAE,EAAEX,MAAM,CAACY,aAAc;IAAAC,QAAA,gBACxDX,OAAA,CAACL,GAAG;MAACa,SAAS,EAAC,aAAa;MAACC,EAAE,EAAEX,MAAM,CAACc,UAAW;MAAAD,QAAA,eACjDX,OAAA,CAACJ,UAAU;QAACiB,OAAO,EAAC,OAAO;QAAAF,QAAA,GACxBP,QAAQ,EAAC,KAAG,EAACG,MAAM;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACNjB,OAAA,CAACL,GAAG;MAACa,SAAS,EAAC,cAAc;MAACC,EAAE,EAAEX,MAAM,CAACoB,WAAY;MAAAP,QAAA,gBACnDX,OAAA,CAACJ,UAAU;QAACiB,OAAO,EAAC,OAAO;QAAAF,QAAA,GACxBN,QAAQ,EAAC,KAAG,EAACF,QAAQ;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,EACZf,WAAW,CAACiB,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAChCrB,OAAA,CAACJ,UAAU;QAAaiB,OAAO,EAAC,OAAO;QAAAF,QAAA,EACpCS;MAAS,GADKC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACb,CAAC,eACFjB,OAAA,CAACL,GAAG;QAACa,SAAS,EAAC,iBAAiB;QAAAG,QAAA,EAC7BL,KAAK,CAACa,GAAG,CAAC,CAACG,IAAI,EAAED,KAAK,kBACrBrB,OAAA,CAACH,IAAI;UAAC0B,KAAK,EAAED;QAAK,GAAMD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAO,EAAA,GAhCKvB,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}